[project]
name = "temusproject7"
version = "0.1.0"
description = "Duman High School - Temus Project"
requires-python = ">=3.12"
dependencies = [
    "aiohttp>=3.9.3",
    "bs4>=0.0.1",
    "beautifulsoup4>=4.12.3",
    "duckduckgo-search>=5.0.0",
    "exa-py>=0.10.0",
    "linkup>=0.1.0", 
    "langchain-community>=0.2.6",
    "langchain-core>=0.2.6",
    "langsmith>=0.1.0",
    "pydantic>=2.6.4",
    "requests>=2.31.0",
    "tavily-python>=0.3.1",
    "typing-extensions>=4.10.0"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[project.scripts]
dev = "app.main:main"

[tool.uv]
dev-dependencies = [
    "black>=25.1.0",
    "pre-commit>=3.8.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pytest>=8.3.3",
    "ruff>=0.6.5",
]

[tool.pytest.ini_options]
addopts = "-v --cov=app --cov-report=term --cov-report=xml:reports/coverage.xml --junitxml=reports/junit.xml"
pythonpath = "app"
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
junit_suite_name = "pytest"
junit_duration_report = "call" # Junit will only report the time to run the tests, not the setup and teardown time

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

# these are the slightly modified ruff default settings
[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG001", # unused arguments in functions],
    # "FAST",   # FastAPI
]
ignore = [
    "ARG001", # unused arguments in functions
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"


[tool.pyright]
venvPath = "."
venv = ".venv"
typeCheckingMode = "standard"
